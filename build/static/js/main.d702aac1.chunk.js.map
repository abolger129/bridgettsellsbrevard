{"version":3,"sources":["Components/Home.module.css","Components/NavBar.module.css","Components/SearchForm.module.css","Components/SearchOutput.module.css","Components/AboutMe.module.css","Components/Billy_Ohio.ttf","Components/NavBar.js","Utils/publicUrl.js","Components/SearchOutput.js","Components/Map.js","Components/CustomSlider.js","Components/SearchForm.js","Contact.js","Components/AboutMe.js","Utils/windowDimensions.js","Components/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","props","bgcolor","bg","assetPath","useState","scroll","setScroll","useEffect","document","addEventListener","scrollCheck","window","scrollY","Navbar","fixed","className","css","navCont","collapseOnSelect","expand","Brand","href","Image","src","startsWith","logo","Toggle","aria-controls","toggler","Collapse","id","navbarContainer","Nav","navbarNav","divNavBlack","divNavWhite","Item","navItemBlack","navItemWhite","Link","textWhite","textBlack","SearchOutput","open","setOpen","handleClickOpen","handleClose","formatter","Intl","NumberFormat","style","currency","properties","console","log","Container","outputCont","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","to","Button","onClick","color","autoFocus","Grid","container","spacing","map","p","lg","xs","md","Card","card","Img","variant","thumbnail","Body","Title","format","price","Text","address","line","city","postal_code","Footer","building_size","size","beds","baths","Map","modalProperty","setModalProperty","lat","lon","GoogleMapExample","withGoogleMap","defaultCenter","lng","defaultZoom","position","e","containerElement","height","width","mapElement","isMarked","Modal","show","onHide","Header","fluid","makeStyles","theme","root","padding","margin","withStyles","thumb","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","left","track","borderRadius","rail","Slider","SearchForm","setCity","setProperties","footage","setFootage","type","setType","bedrooms","setBedrooms","bath","setBaths","features","setFeatures","clicked","setClicked","error","setError","minPrice","setMinPrice","maxPrice","setMaxPrice","visible","setVisible","Option","Select","formControl","minWidth","selectEmpty","useStyles","menu","item","fullWidth","key","List","component","checked","value","target","name","title","onChange","val","placeholder","temp","handleFootageChange","handleMaxFootageChange","overlay","onVisibleChange","flag","DownOutlined","toggle","max","forSaleUrl","fetch","method","headers","body","JSON","stringify","url","then","r","json","length","catch","loading","Contact","email","setEmail","setName","submitting","setSubmitting","message","setMessage","text","TextField","label","n","multiline","rows","m","CircularProgress","res","data","success","React","useRef","current","setTimeout","AboutMe","aboutmecont","sm","headshot","rounded","fontSize","paddingTop","getWindowDimensions","innerWidth","innerHeight","Home","windowDimensions","setWindowDimensions","handleResize","removeEventListener","useWindowDimensions","index","setIndex","images","setImages","changeIndex","smallImages","largeImages","mainCont","ImgOverlay","headerImg","overlayTitle","shape","bubble","ghost","bubbleR","App","require","config","basename","process","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d702aac1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerImg\":\"Home_headerImg__37r5u\",\"container\":\"Home_container__2z0pk\",\"overlayTitle\":\"Home_overlayTitle__2xRBF\",\"bubble\":\"Home_bubble__3FMJ6\",\"bubbleR\":\"Home_bubbleR__1HRzt\",\"mainCont\":\"Home_mainCont__3j77H\",\"animation\":\"Home_animation__1OtrO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navItemBlack\":\"NavBar_navItemBlack__3eCtS\",\"navItemWhite\":\"NavBar_navItemWhite__2V3cD\",\"logo\":\"NavBar_logo__2b9K_\",\"NavItem\":\"NavBar_NavItem__3Gt1P\",\"textWhite\":\"NavBar_textWhite__2HuEU\",\"textBlack\":\"NavBar_textBlack__1gQ9Q\",\"navbarContainer\":\"NavBar_navbarContainer__2NaRj\",\"navCont\":\"NavBar_navCont__3Q8Ja\",\"navbarNav\":\"NavBar_navbarNav__2vdBq\",\"toggler\":\"NavBar_toggler__3BmsR\",\"navbar-light\":\"NavBar_navbar-light__Rg5CE\",\"navbar-toggler-icon\":\"NavBar_navbar-toggler-icon__1W5Iy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"col\":\"SearchForm_col__1C5yc\",\"title\":\"SearchForm_title__3cAwA\",\"searchButton\":\"SearchForm_searchButton__aw0i0\",\"price\":\"SearchForm_price__XPVtj\",\"toggle\":\"SearchForm_toggle__1TlKc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outputCont\":\"SearchOutput_outputCont__IpZGt\",\"card\":\"SearchOutput_card__1-kuy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headshot\":\"AboutMe_headshot__1ihzD\",\"aboutmecont\":\"AboutMe_aboutmecont__3olLA\",\"description\":\"AboutMe_description__uw_56\",\"cardcontainer\":\"AboutMe_cardcontainer__1Clvd\"};","module.exports = __webpack_public_path__ + \"static/media/Billy_Ohio.95aed621.ttf\";","import React,{useEffect,useState} from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav'\nimport Image from 'react-bootstrap/Image'\nimport publicUrl from \"Utils/publicUrl\"\nimport css from \"../Components/NavBar.module.css\"\n\n\nexport default function NavBar(props){\n\n  var bgcolor = false;\n  if (props.bg === \"true\"){\n    bgcolor = false;\n  }\n  else{\n    bgcolor = true;\n  }\n  \n    const [scroll, setScroll] = useState(1)\n\n\n    useEffect(() => {\n      document.addEventListener(\"scroll\", () => {\n        const scrollCheck = window.scrollY < 50\n        if (scrollCheck !== scroll) {\n          setScroll(scrollCheck)\n        }\n      })\n    })\n    \n    return(\n      <div>\n        <Navbar bg={ (scroll && bgcolor) ? \"transparent\" : \"light\"} fixed = \"top\" className = {css.navCont} collapseOnSelect expand=\"lg\">\n          <Navbar.Brand href=\"/\">   <Image src={publicUrl((scroll && bgcolor) ? \"/assets/coastal_life.jpg\" : \"/assets/coastal_life_color.jpg\")} className = {css.logo}/> </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className = { css.toggler }/> \n          <Navbar.Collapse id = \"basic-navbar-nav\" className = {css.navbarContainer}>\n            <Nav className = {css.navbarNav}>\n              <div className = {(scroll && bgcolor) ? css.divNavBlack : css.divNavWhite}>\n              <Nav.Item className = {(scroll && bgcolor) ? css.navItemBlack : css.navItemWhite}>\n                <Nav.Link  href=\"/\"><strong className = {(scroll && bgcolor) ? css.textWhite : css.textBlack}> Home </strong></Nav.Link>\n              </Nav.Item>    \n              </div>    \n              <div className = {(scroll && bgcolor) ? css.divNavBlack : css.divNavWhite}>\n              <Nav.Item className = {(scroll && bgcolor) ? css.navItemBlack : css.navItemWhite}>\n                <Nav.Link  href=\"/search\"><strong className = {(scroll && bgcolor) ? css.textWhite : css.textBlack}> Search Homes</strong></Nav.Link>\n              </Nav.Item>    \n              </div>\n              {/* <div className = {(scroll && bgcolor) ? css.divNavBlack : css.divNavWhite}>\n              <Nav.Item className = {(scroll && bgcolor) ? css.navItemBlack : css.navItemWhite}>\n                <Nav.Link  href=\"/resources\"><strong className = {(scroll && bgcolor) ? css.textWhite : css.textBlack}> About Brevard </strong></Nav.Link>\n              </Nav.Item>    \n              </div>         */}\n              {/* <div className = {scroll ? css.divNavBlack : css.divNavWhite}>\n              <Nav.Item className = {(scroll && bgcolor) ? css.navItemBlack : css.navItemWhite}>\n                <Nav.Link href = \"/home#about\"><strong className = {(scroll && bgcolor) ? css.textWhite : css.textBlack}>About Me</strong></Nav.Link>\n              </Nav.Item>        \n              </div> */}\n              <div className = {(scroll && bgcolor) ? css.divNavBlack : css.divNavWhite}>\n              <Nav.Item className = {(scroll && bgcolor) ? css.navItemBlack : css.navItemWhite}>\n                <Nav.Link href = \"/home#contact\"><strong className = {(scroll && bgcolor) ? css.textWhite : css.textBlack}>Contact Me</strong></Nav.Link>\n              </Nav.Item>        \n              </div>\n            </Nav>\n          </Navbar.Collapse>  \n        </Navbar>\n      </div>\n    )\n\n}","export default (assetPath)=>{\n        //return process.env.PUBLIC_URL+assetPath;\n    const publicUrl = assetPath.startsWith('data:image') ? '' : process.env.PUBLIC_URL;\n    return publicUrl + assetPath;\n}","import React, { useState } from \"react\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Card from \"react-bootstrap/Card\"\nimport css from \"./SearchOutput.module.css\"\nimport Container from \"react-bootstrap/Container\"\nimport {Dialog, DialogContent,DialogTitle, DialogContentText, DialogActions} from \"@material-ui/core\"\nimport {Button} from \"react-bootstrap\"\nimport {Link} from \"react-router-dom\"\n\n\n\nexport default function SearchOutput(props){\n\n    const [open, setOpen] = useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n      };\n    \n      const handleClose = () => {\n        setOpen(false);\n      };\n\n\n    var formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n      });\n      const properties = props.properties;\n      console.log(properties)\n      \n    return(\n        <Container id ={css.outputCont}>\n        <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\" Want more information?\"}</DialogTitle>\n        <DialogContent>\n            <DialogContentText>\n                I would be happy to provide you with more information and pictures! Just click go, fill out the form and I will get back to you.\n            </DialogContentText>\n        </DialogContent>\n        <DialogActions className = \"justify-content-center\">\n        <Link to = \"/#contact\">\n\n        <Button onClick={handleClose} color=\"primary\" autoFocus className = \"margin5\">\n            Go\n        </Button>\n        </Link>\n        <Button onClick={handleClose} color=\"primary\" autoFocus className = \"margin5\">\n            Cancel\n        </Button>\n        </DialogActions>\n      </Dialog>\n        <Grid container spacing = {3}>\n\n    {properties.map(p =>\n            <Grid lg = {4} xs = {12} md = {12} onClick = {open}>\n                    <a onClick = {handleClickOpen}>\n\n                <div className = \"margin10\">\n                    <Card className = {css.card}>\n                        <Card.Img variant=\"top\" src={p.thumbnail} className = \"cardImg\" />\n                        <Card.Body>\n                        <Card.Title>{formatter.format(p.price)}</Card.Title>\n                        <Card.Text>                        \n                            {p.address.line + \" \" +  p.address.city + \" \" + p.address.postal_code}\n                        </Card.Text>\n                        </Card.Body>\n                        <Card.Footer>\n                        <small className=\"text-muted\">Square Footage : {p.building_size.size}, </small>\n                        <small className=\"text-muted\">Bedrooms : {p.beds}, </small>\n                        <small className=\"text-muted\">Baths : {p.baths} </small>\n                        </Card.Footer>\n                    </Card>                  \n                </div>           \n                </a>       \n                    \n            </Grid>     \n        )}\n    </Grid>\n\n        </Container>\n\n\n\n    )\n}","import React, {useState} from 'react';\nimport { withGoogleMap, GoogleMap, Marker } from 'react-google-maps';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from \"react-bootstrap/Button\"\nimport Image from \"react-bootstrap/Image\"\n\n\nfunction Map(props) {\n\n  const [open, setOpen] = useState(false);\n  const [modalProperty, setModalProperty] = useState();\n\n  var properties\n  if(props) {\n    properties = props.properties;\n    properties.map(p => console.log(p.address.lat +\" \"+ p.address.lon))\n\n  }\n  else{\n    properties = false\n  }\n  console.log(properties)\n   const GoogleMapExample = withGoogleMap(props => (\n      <GoogleMap\n        defaultCenter = { { lat: 28.2639, lng: -80.7214 } }\n        defaultZoom = { 8 }\n      >\n        {properties  ?  properties.map(p =>\n           <Marker position={{ lat: p.address.lat, lng: p.address.lon }} onClick = {e => {setOpen(true); setModalProperty(p)}}/>) : \"\"}\n      </GoogleMap>\n   ));\n\n   return(\n      <div>\n        <GoogleMapExample\n          containerElement={ <div style={{ height: `500px`, width: '100%' }} /> }\n          mapElement={ <div style={{ height: `100%` }} /> }\n          isMarked = {true}\n        />\n        {modalProperty ? \n           <Modal show={open} onHide={e => setModalProperty(false)}>\n        <Modal.Header>\n          <Modal.Title>\n            <Image src = {modalProperty.thumbnail} fluid/>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {modalProperty.address.line + \" \" +  modalProperty.address.city + \" \" + modalProperty.address.postal_code}\n          <div>\n            <small className=\"text-muted\">Square Footage : {modalProperty.building_size.size}, </small>\n            <small className=\"text-muted\">Bedrooms : {modalProperty.beds}, </small>\n            <small className=\"text-muted\">Baths : {modalProperty.baths} </small>            \n          </div>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={e => setOpen(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n        </Modal>\n        : \"\"}\n      </div>\n   );\n}\nexport default Map;\n","import React from \"react\"\nimport Slider from \"@material-ui/core/Slider\"\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\"\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: 300 + 24 * 2,\n      padding: 24\n    },\n    margin: {\n      height: theme.spacing(1)\n    }\n  }));\n\n\nconst PrettoSlider = withStyles({\n    root: {\n      color: '#3f51bf',\n      height: 8,\n    },\n    thumb: {\n      height: 24,\n      width: 24,\n      backgroundColor: '#fff',\n      border: '2px solid currentColor',\n      marginTop: -8,\n      marginLeft: -12,\n      '&:focus, &:hover, &$active': {\n        boxShadow: 'inherit',\n      },\n    },\n    active: {},\n    valueLabel: {\n      left: 'calc(-50% + 4px)',\n    },\n    track: {\n      height: 8,\n      borderRadius: 4,\n    },\n    rail: {\n      height: 8,\n      borderRadius: 4,\n    },\n  })(Slider);\n\n  function valuetext(number,d){\n    if (number === 1000000){\n        return \"1m +\"\n    }\n    const decPlaces = Math.pow(10,0);\n    var abbrev = [ \"k\", \"m\", \"b\", \"t\" ];\n            for (var i=abbrev.length-1; i>=0; i--) {\n                var size = Math.pow(10,(i+1)*3);\n                if(size <= number) {\n             number = Math.round(number*decPlaces/size)/decPlaces;\n             if((number === 1000) && (i < abbrev.length - 1)) {\n                 number = 1;\n                 i++;\n             }\n             number += abbrev[i];\n             break;\n        }\n    }\n\n    return number;\n\n}\n  \n\n  const CustomSlider = ({ label, price, setPrice }) => {\n\n    const classes = useStyles();\n    return (\n        <div>\n        <PrettoSlider\n            value={price}\n            valueLabelDisplay=\"auto\"\n            aria-labelledby=\"range-slider\"\n            getAriaValueText={valuetext}\n            valueLabelFormat = {valuetext}\n            min = {25000}\n            variant = \"outlined\"\n            max = {1000000}\n            valueLabelDisplay=\"auto\"\n            aria-label=\"pretto slider\"\n            defaultValue={50}\n            onChange={(event, v) => {\n                setPrice(v);\n            }}\n        />\n        </div>\n    );\n  };\n  export default CustomSlider;","import React,{useState} from \"react\"\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport FormGroup from \"@material-ui/core/FormGroup\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Container from 'react-bootstrap/Container'\nimport InputLabel from \"@material-ui/core/InputLabel\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\nimport FormControl from \"@material-ui/core/FormControl\"\nimport css from \"./SearchForm.module.css\"\nimport Grid from \"@material-ui/core/Grid\"\nimport SearchOutput from \"./SearchOutput\";\nimport { CircularProgress, FormControlLabel, Radio, List } from \"@material-ui/core\";\nimport NavBar from \"./NavBar\";\nimport Map from \"./Map\"\nimport CustomSlider from \"./CustomSlider\";\nimport DropdownToggle from \"react-bootstrap/DropdownToggle\";\nimport {Form} from \"react-bootstrap\"\nimport {Select, Input, Menu, Dropdown, Checkbox, Divider, Button} from \"antd\"\nimport { DownOutlined, UserOutlined } from '@ant-design/icons';\n\nimport 'antd/dist/antd.css';\n\n\nexport default function SearchForm(){\n\n\n    const [city, setCity] = useState();\n    const [price, setPrice] = useState([0, 400000]);\n    const [properties,setProperties] = useState([])\n    const [footage, setFootage] = useState([0,10000000]);\n    const [type,setType] = useState([])\n    const [bedrooms,setBedrooms] = useState()\n    const [bath,setBaths] = useState()\n    const [features, setFeatures]= useState([])\n    const [clicked, setClicked] = useState(false)\n    const [error, setError] = useState()\n    const [minPrice, setMinPrice] = useState()\n    const [maxPrice, setMaxPrice] = useState()\n    const [visible, setVisible] = useState(false)\n    const { Option } = Select;\n\n    console.log(minPrice)\n\n    const useStyles = makeStyles((theme) => ({\n        formControl: {\n          margin: theme.spacing(.5),\n          minWidth: 120\n        },\n        selectEmpty: {\n          marginTop: theme.spacing(1),\n        },\n      }));\n\n\n      \n      \n      \n\n        const classes = useStyles();\n      \n        const handlePrice = (event, newValue) => {\n          setPrice(newValue);\n          \n        };\n\n\n    function handleClick(props){\n        setCity(props);\n    }\n\n    function fetchProperties(props){    \n\n        setClicked(true)\n        var max; \n        if (maxPrice === 1000000){\n            max = \"\";\n        }\n        else{max = \"&price_max=\" + maxPrice}\n\n        var min; \n        const forSaleUrl = \"https://realtor.p.rapidapi.com/properties/v2/list-for-sale?sort=relavance&city=\" + city + \"&limit=200&state_code=FL&sqft_min=\" + footage[0] + \"&baths_min=\" + bath + \"&beds_min=\" + bedrooms + \"&features=\" + features + \"&price_min=\" + minPrice + max + \"&prop_type=\" + type + \"&sqft_max=\" + footage[1];\n       \n        fetch('/apis/search',{\n            method : 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({url : forSaleUrl})\n        })\n        .then(r => r.json())\n        .then(r => {\n            if (r.properties.length > 0 ){setProperties(r.properties)}\n            else{ setError(\"There are no properties with these features.\"); setClicked(false)}\n        })\n        .catch((error) => {setError(\"There was an error loading your future home.\"); setClicked(false)})\n    }\n\n    function handleFootageChange(props){\n        var temp = footage\n        temp[0] = props\n        setFootage(temp)\n    }\n\n    function handleMaxFootageChange(props){\n        var temp = footage\n        temp[1] = props\n        setFootage(temp)\n    }\n    function handleMenuClick(e){\n        if (e.key === '2') {\n          setVisible(false)\n        }\n      };\n\n    function handleVisibleChange(flag){\n        setVisible(flag)\n      }\n    const menu = (\n<Grid container item fullWidth onClick={handleMenuClick}>\n                                <Grid container item lg = {6}> \n                                <List component=\"nav\">\n\n                                <Grid item lg = {12}>\n                                <div>\n                                        Min Price\n                                    </div>\n                                </Grid>\n                                <Divider/>\n                                <Grid item lg = {12}>\n                                        <Checkbox\n                                            checked={minPrice == \"0\"}\n                                            value=\"0\"\n                                            onClick = { e => setMinPrice(e.target.value)}\n                                            color = \"primary\"\n                                        >\n                                            Any\n                                        </Checkbox>\n                                    </Grid>\n                                    <Divider/>\n                                    <Grid item lg = {12}>\n                                        <Checkbox\n                                            checked={minPrice == \"100000\"}\n                                            name=\"100k\"\n                                            value=\"100000\"\n                                            onClick = { e => setMinPrice(e.target.value)}\n                                            color = \"primary\"\n                                            >\n                                                $100,000\n                                            </Checkbox>\n                                    </Grid>\n                                    <Divider/>\n\n                                        <Grid item lg = {12}>\n                                        <Checkbox\n                                            checked={minPrice == \"200000\"}\n                                            name=\"200k\"\n                                            value=\"200000\"\n                                            onClick = { e => setMinPrice(e.target.value)}\n                                            color = \"primary\"\n                                            >\n                                                $200,000\n                                            </Checkbox>\n                                        </Grid>      \n                                        <Divider/>\n\n                                        <Grid item lg = {12}>\n                                        <Checkbox\n                                            checked={minPrice == \"300000\"}\n                                            name=\"300k\"\n                                            value=\"300000\"\n                                            onClick = { e => setMinPrice(e.target.value)}\n                                            color = \"primary\"\n                                        >\n                                            $300,000\n                                        </Checkbox>\n                                        </Grid>   \n                                        <Divider/>\n\n                                        <Grid item lg = {12}>\n                                        <Checkbox\n                                            checked={minPrice == \"400000\"}\n                                            name=\"400k\"\n                                            value=\"400000\"\n                                            onClick = { e => setMinPrice(e.target.value)}\n                                            color = \"primary\"\n                                            >\n                                                $400,000\n                                            </Checkbox>\n                                        </Grid>   \n                                        <Divider/>\n\n                                        </List>\n                                </Grid>\n                                <Grid item lg = {6}>\n                                    <List>\n                                    <Grid item lg = {12}>\n                                    <div>\n                                      Max Price\n                                    </div>\n                                    </Grid>  \n                                    <Divider/>\n                                    <Grid item lg = {12}>\n                                        <Checkbox\n                                            checked={maxPrice == \"1000000\"}\n                                            value=\"1000000\"\n                                            onClick = { e => setMaxPrice(e.target.value)}\n                                            color = \"primary\"\n                                        > \n                                        Any \n                                        </Checkbox>\n                                    </Grid>\n                                    <Divider/>\n                                        <Grid item lg = {12}>\n                                        <Checkbox\n                                            checked={maxPrice == \"200000\"}\n                                            name=\"200k\"\n                                            value=\"200000\"\n                                            onClick = { e => setMaxPrice(e.target.value)}\n                                            color = \"primary\"\n                                        > \n                                        $200,000 \n                                        </Checkbox>\n                                    </Grid>    \n                                    <Divider/>\n\n                                        <Grid> \n                                                <Checkbox\n                                                    checked={maxPrice == \"400000\"}\n                                                    name=\"400k\"\n                                                    value=\"400000\"\n                                                    onClick = { e => setMaxPrice(e.target.value)}\n                                                    color = \"primary\"\n                                                >\n                                                    $400,000\n                                                </Checkbox>     \n                                        </Grid>\n                                        <Divider/>\n                                        <Grid> \n                                                <Checkbox\n                                                    checked={maxPrice == \"600000\"}\n                                                    name=\"600k\"\n                                                    value=\"600000\"\n                                                    onClick = { e => setMaxPrice(e.target.value)}\n                                                    color = \"primary\"\n                                                >\n                                                    $600,000\n                                                </Checkbox>  \n                                        </Grid>\n                                        <Divider/>   \n                                        <Grid> \n\n                                                <Checkbox\n                                                    checked={maxPrice == \"800000\"}\n                                                    name=\"800k\"\n                                                    value=\"800000\"\n                                                    onClick = { e => setMaxPrice(e.target.value)}\n                                                    color = \"primary\"\n                                                >\n                                                    $800,000\n                                                </Checkbox>  \n                                        </Grid>   \n                                        <Divider/>\n                                        </List>\n\n                                </Grid>\n                            </Grid>\n      );\n\n    console.log(city)\n    return(\n        <div>\n            <NavBar bg=\"true\"/>\n            <div id =\"search\" className = \"marginTop100\">\n            <Container>\n            <div className = {css.title}>\n            <h2>\n                Search For a Home\n            </h2>                \n            </div>\n            <Grid container spacing = {3}>\n\n                <Grid item xs = {12} lg = {3}>\n\n                            <Select\n                                    value={city}\n                                    onChange={val => setCity(val)}\n                                    variant = \"outlined\"\n                                    placeholder = \"City\"\n                                    style ={{width : \"100%\"}}\n                                    size=\"large\"\n                            >                                \n                                    <Option value = {\"Melbourne\"}> Melbourne</Option>\n                                    <Option value={\"Merritt%20Island\"}>Merritt Island</Option>\n                                    <Option value={\"Cocoa%20Beach\"}>Cocoa Beach</Option>\n                                    <Option value = {\"Satellite%20Beach\"}>Satellite Beach</Option>\n                                    <Option value = {\"Titusville\"}>Titusville</Option>\n                                    <Option value ={\"Mims\"}>Mims</Option>\n                                    <Option value ={\"Cocoa\"}>Cocoa</Option>\n                                    <Option value ={\"Rockledge\"}>Rockledge</Option>\n                                </Select>   \n                </Grid>\n                <Grid item lg = {3} xs = {12}>\n                            <Select\n                                    value={type}\n                                    onChange={val => setType(val)}\n                                    placeholder = \"Type\"\n                                    size=\"large\"\n                                    style ={{ width : \"100%\"}}\n\n                                >\n                                    <Option value={\"single_family\"} >Single Family</Option>\n                                    <Option value={\"multi_family\"}>Multi Family</Option>\n                                    <Option value={\"condo\"}>Condo</Option>\n                                    <Option value={\"mobile\"}>Mobile</Option>\n                                    <Option value={\"land\"}>Land</Option>\n                                    <Option value={\"farm\"}>Farm</Option>\n                            </Select>                        \n                </Grid>\n                <Grid item xs = {12} lg = {3}>\n                        <Select\n                            value={features}\n                            onChange={val => setFeatures(val)}\n                            placeholder = \"Features\"\n                            style ={{ width : \"100%\"}}\n                            size = \"large\"\n                        >\n                            <Option value={\"pool\"} >Pool</Option>\n                            <Option value={\"waterfront\"}>Waterfront</Option>\n                        </Select>                        \n                </Grid>\n                <Grid item xs ={12} lg = {3} >\n                    <Input \n                    placeholder=\"Min Square Footage\"\n                    size = \"large\" \n                    style = {{width:\"100%\"}}\n                    onChange = {val => handleFootageChange(val)}\n                    />\n                </Grid>\n                <Grid item xs ={12} lg = {3}>\n                    <Input \n                    placeholder=\"Max Square Footage\" \n                    onChange = {val => handleMaxFootageChange(val)}\n                    size = \"large\" \n                    style = {{width:\"100%\"}}\n                    />\n                </Grid>\n                <Grid item xs = {12} lg = {3}>\n                        <Select\n                            value={bedrooms}\n                            onChange={val => setBedrooms(val)}\n                            placeholder = \"Bedrooms\"\n                            style ={{ width : \"100%\"}}\n                            size = \"large\"\n                        >\n                            <Option value={1}>1</Option>\n                            <Option value={2}>2</Option>\n                            <Option value={3}>3</Option>\n                            <Option value={4}>4</Option>\n                            <Option value={5}>5</Option>\n                            <Option value={6}>6</Option>\n                            <Option value={7}>7</Option>\n                            <Option value={8}>8</Option>\n                            <Option value={9}>9+</Option>\n                        </Select>                        \n                </Grid>\n                <Grid item xs = {12} lg ={3}>\n\n                    <Select\n                        value={bath}\n                        onChange={val => setBaths(val)}\n                        placeholder = \"Bathrooms\"\n                        style ={{ width : \"100%\"}}\n                        size = \"large\"\n                    >\n                        <Option value={1}>1</Option>\n                        <Option value={2}>2</Option>\n                        <Option value={3}>3</Option>\n                        <Option value={4}>4</Option>\n                        <Option value={5}>5</Option>\n                        <Option value={6}>6</Option>\n                        <Option value={7}>7</Option>\n                        <Option value={8}>8</Option>\n                        <Option value={9}>9+</Option>\n                    </Select>                          \n                </Grid>  \n                <Grid  item lg ={3} xs = {12} fullWidth> \n                <Dropdown overlay={menu} visible = {visible} onVisibleChange={handleVisibleChange}>\n                    <Button size = \"large\" style = {{width: \"100%\"}} id = {css.price} placeholder = \"Price\" >\n                        Price <DownOutlined id = {css.toggle}/>\n                    </Button>\n                </Dropdown>\n                </Grid>              \n                </Grid>\n         \n                    <Button onClick = {fetchProperties} variant = \"outline-dark\" size = \"large\" loading = {properties.length === 0 && clicked} className=\"marginTop30\">\n                        Search\n                    </Button>               \n            </Container>\n            <Map properties = {properties}/>\n            {properties.length > 0 ? <SearchOutput properties = {properties}/> : <div> {error} </div> }\n            </div>\n        </div>\n    );\n}","import React, { useState} from \"react\"\nimport Container from \"react-bootstrap/Container\"\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\nimport {faFacebook, faInstagram,faTwitter} from \"@fortawesome/free-brands-svg-icons\"\nimport Grid from \"@material-ui/core/Grid\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Button from \"react-bootstrap/Button\"\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\n\n\nexport default function Contact(props){\n\n    const [email,setEmail] = useState()\n    const [name, setName] = useState()\n    const [submitting, setSubmitting] = useState()\n    const [message, setMessage] = useState()\n\n    const text = {\"email\" : email, \"name\" : name, \"message\" : message}\n\n    function addEmail(props){\n      setSubmitting(true)\n          fetch('/api/messages', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({text : text})\n        })\n          .then(res => res.json())\n          .then(data => {\n            if (data.success) {\n                console.log(\"Success\");\n                }\n             else {\n                console.log(\"Error\");\n            }\n          });\n          React.useRef.current = setTimeout(() => {\n            setSubmitting(false)\n          }, 2000);\n      }\n\n    return(\n        <Container title = \"Contact Me!\" id = \"contact\">\n            <div>\n                You can reach out to me or enter your email address and I will get back to you!\n            </div>\n            <Grid container spacing = {3} className = \"justify-content-center\">\n                <Grid container item lg = {12} className =\"justify-content-center\">\n                  <div>\n                    <h6 className = \"padding5\">\n                      Email: bridgettsellsbrevard@gmail.com\n                    </h6>                    \n                  </div>\n                  <div>\n                    <h6 className = \"padding5\">\n                      Phone: 757-817-1138\n                    </h6>                    \n                  </div>\n                </Grid>\n                <Grid container item lg = {6}>\n                    <TextField\n                    variant = \"outlined\"\n                    margin=\"dense\"\n                    id=\"email\"\n                    label=\"Email Address\"\n                    type=\"email\"\n                    fullWidth\n                    onChange={n=> setEmail(n.target.value)}\n                    />\n                </Grid>\n                <Grid container item lg = {6}>\n                    <TextField\n                    variant = \"outlined\"\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Name\"\n                    fullWidth\n                    onChange={n=> setName(n.target.value)}\n                    />\n                </Grid>      \n                <Grid container item lg = {12}>\n                    <TextField\n                    multiline\n                    rows = {6}\n                    variant = \"outlined\"\n                    margin=\"dense\"\n                    id=\"message\"\n                    label=\"Message\"\n                    fullWidth\n                    onChange={m => setMessage(m.target.value)}\n                    />\n                </Grid>                         \n            </Grid>\n            {submitting ? \n                <CircularProgress/>\n                :           \n                <Button onClick = {addEmail} variant = \"outline-dark\" className=\"margin10\">\n                    Submit\n                </Button>}   \n        </Container>\n    )\n}\n","import React from \"react\"\nimport Image from \"react-bootstrap/Image\"\nimport css from \"./AboutMe.module.css\"\nimport NavBar from \"./NavBar\";\nimport HomeCardGroup from \"./HomeCardGroup\"\nimport Contact from \"../Contact\";\nimport { Grid } from \"@material-ui/core\";\n\nexport default function AboutMe(){\n\n    return(\n        <div className = {css.aboutmecont}>\n        <div>\n            <Grid container className = \"marginTop30 justify-content-center paddingBot100\">\n                <Grid lg = {4} sm ={12} md = {3} >\n                <Image src = \"./assets/headshot.jpg\" className = {css.headshot} rounded/>\n                </Grid>\n                <Grid container item lg = {8} sm ={12} md = {9} className = \"marginTop30 justify-content-center\">\n                    <div className = \"width80\">\n                        <p style = {{fontSize: \"30px\", paddingTop:\"15%\"}}>\n                           Meet Bridgett Stuhlmiller!  A real estate agent with a love for life, the Space Coast, and making her clients her number one priority!\n                        </p>                        \n                    </div>\n\n                </Grid >   \n            </Grid>\n            {/* <div className = {css.cardcontainer}>\n                <h2>\n                    Testimonials\n                </h2>\n                <HomeCardGroup/>\n            </div> */}\n        </div>    \n        <div id = \"contact\" className = \"marginTop60 paddingBot75 paddingTop75\">\n            <h3>\n                Contact Me\n            </h3>\n           <Contact/>\n        </div>        \n        </div>\n\n    )\n}","import { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}","import React, { useState, useEffect } from \"react\"\nimport publicUrl from \"./../Utils/publicUrl\"\nimport NavBar from \"./NavBar\"\nimport css from \"./Home.module.css\"\nimport Card from \"react-bootstrap/Card\"\nimport SearchForm from \"./SearchForm\"\nimport AboutMe from \"./AboutMe\"\nimport Contact from \"Contact\"\nimport Typewriter from 'typewriter-effect';\nimport useWindowDimensions from \"../Utils/windowDimensions\"\nimport \"./Billy_Ohio.ttf\"\nimport CrossfadeImage from \"react-crossfade-image\"\nimport {Button} from \"antd\"\n\nimport 'antd/dist/antd.css';\n\n\n\nexport default function Home(props){\n\n    const { height, width } = useWindowDimensions();\n\n    const [index, setIndex] = useState(0);\n    const [images, setImages] = useState([])\n\n    function changeIndex(index){\n        if (index == 4){\n            setIndex(0)\n        }\n        else{\n            setIndex(index + 1)\n        }\n    }\n\n    useEffect(()=>{\n        if (width < 786){\n            setImages(smallImages)\n        }\n        else{\n            setImages(largeImages)\n        }\n    })\n\n    const largeImages = [\"/assets/lg2.jpg\", \"/assets/lg1.jpg\", \"/assets/lg3.jpg\", \"/assets/lg4.jpg\"]\n    const smallImages = [\"/assets/sm1.jpg\", \"/assets/sm2.jpg\", \"/assets/sm3.jpg\",\"/assets/sm4.jpg\", \"/assets/sm5.jpg\"]\n\n    if (width < 786){\n        setTimeout(function(){ changeIndex(index) }, 3000);\n    }\n    else{\n        setTimeout(function(){ changeIndex(index) }, 3000);\n    }\n    \n\n    return(\n        <div className = {css.mainCont}>\n            <Card id = \"#container\">\n                <Card.Img src={images[index]} height = {height} width = {width} fluid/>\n                <Card.ImgOverlay className = {css.headerImg}>\n                    <NavBar bg = \"false\"/>  \n                        <div className = {css.overlayTitle}>\n                            Love Where You Live\n                            {/* <Typewriter\n                                options={{\n                                    strings: [\"Merritt Island\",\"Cocoa Beach\",\"Melbourne\",\"Viera\", \"Rockledge\", \"Cocoa\", \"Titusville\", \"Indialantic\"],\n                                    autoStart: true,\n                                    loop: true,\n                                }}\n                            /> */}\n                        </div>\n                        <Button shape=\"circle\" className = {css.bubble} ghost href = \"/assets/buyerbook.pdf\">\n                            Buyers\n                        </Button>\n                        <Button shape=\"circle\" className = {css.bubbleR} ghost href = \"/assets/sellerbook.pdf\">\n                            Sellers\n                        </Button>\n                </Card.ImgOverlay>\n            </Card>\n            <AboutMe/>\n        </div>\n    )\n}","import React from 'react';\nimport './App.css';\nimport {BrowserRouter as Router,Switch,Route} from \"react-router-dom\";\nimport Home from \"./Components/Home\"\nimport Contact from \"./Contact\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport AboutMe from 'Components/AboutMe';\nimport SearchForm from 'Components/SearchForm';\n\nfunction App() {\n  require('dotenv').config()\n  return (\n      <Router basename = {process.env.PUBLIC_URL}>\n          <main className = \"marginBot20\">\n            {\n              <Switch>\n                <Route path = \"/home\">\n                  <Home />\n                </Route>\n                {/* <Route path = \"/resources\">\n                  <Resources />\n                </Route> */}\n                <Route path = \"/search\">\n                  <SearchForm/>\n                </Route>\n                <Route path = \"\"> \n                  <Home/>\n                </Route>\n              </Switch>\n            }        \n          </main>\n      </Router>   \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}